# change prefix key to Ctrl-a; like GNU Screen
unbind-key C-b
set-option -g prefix C-a

# goto last used window
bind-key C-a last-window

# move pane to its own window
bind-key b break-pane

# Nested Tmux Session
# send to tmux session within another tmux session; like screen
bind-key a send-prefix

# fix delay time between tmux & vim
set-option -sg escape-time 20

# default shell
set-option -g default-command /bin/zsh
set-option -g default-shell /bin/zsh

# reload config
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "Configuration reloaded"

# edit config
bind-key e new-window -n 'conf' '${EDITOR:-vim} ~/.config/tmux/tmux.conf && tmux source ~/.config/tmux/tmux.conf && tmux display "~/.config/tmux/tmux.conf sourced"'

# clear screen and scrollback history
# bind-key -n C-p send-keys C-l \; run 'tmux clear-history'

# set display timelimit
set-option -g display-panes-time 2000
set-option -g display-time 1000

# history size
set-option -g history-limit 20000

# enable shell hotkeys C-left/C-right
# http://sigizmund.com/tmux-and-c-leftc-right/
set-window-option -g xterm-keys on

# enable 256 color terminal
# http://blog.sanctum.geek.nz/256-colour-terminals/
set-option -g default-terminal "tmux-256color"

#}}}
#-------- Keybinding (Vim Style) {{{
#------------------------------------------------------
# vim keys in command prompt
set-option -g status-keys vi

# unicode
# set-window-option -g utf8 on

# select panes
bind-key k select-pane -U
bind-key h select-pane -L
bind-key j select-pane -D
bind-key l select-pane -R

# cycle windows/panes (no prefix)
bind-key -n M-k select-pane -t :.-	# prev pane
bind-key -n M-j select-pane -t :.+	# next pane
bind-key -n M-h select-window -t :-	# previous window
bind-key -n M-l select-window -t :+	# next window

# resize panes
bind-key -r J resize-pane -D 1
bind-key -r K resize-pane -U 1
bind-key -r H resize-pane -L 1
bind-key -r L resize-pane -R 1

# split pane (tmux 1.9+)
bind-key '\' split-window -h -c "#{pane_current_path}"	# vertical split (default prefix-%)
bind-key - split-window -v -c "#{pane_current_path}"	# horizontal split (default prefix-")

# split full window (tmux 2.3+)
bind-key | split-window -fh -c "#{pane_current_path}"
bind-key _ split-window -fv -c "#{pane_current_path}"

# new window with the current path (tmux 1.9+)
bind-key c new-window -c "#{pane_current_path}"

# kill window/pane without confirmation
# http://unix.stackexchange.com/a/30283
bind-key & kill-window
bind-key x kill-pane

# sync panes; send what you are typing to other panes.
bind-key C-s set-window-option synchronize-panes

#}}}
#-------- Copy Mode (Vim Style) {{{
#------------------------------------------------------
# vim keys in copy and choose mode
set-window-option -g mode-keys vi

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind-key Escape copy-mode
bind-key p paste-buffer
bind-key P choose-buffer
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

# set the current tmux version (use this variable on if-shell commands)
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# vim copy mode rebinds for (tmux 2.4+)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T choice-mode-vi h send-keys -X tree-collapse
bind-key -T choice-mode-vi l send-keys -X tree-expand
bind-key -T choice-mode-vi H send-keys -X tree-collapse-all
bind-key -T choice-mode-vi L send-keys -X tree-expand-all
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"

#}}}
#-------- Mouse {{{
#------------------------------------------------------
# toggle mouse mode (tmux 2.1 or higher)
set-option -g -q mouse on
bind-key m set-option -g -q mouse on \; display-message 'Mouse: ON'
bind-key M set-option -g -q mouse off \; display-message 'Mouse: OFF'

# }}}
#-------- Window / Pane Settings {{{
#------------------------------------------------------
# pane divider color; non active pane
set-option -g pane-border-style fg=blue,bg=black

# pane divider color; active pane helps when you have more than two panes.
set-option -g pane-active-border-style fg=yellow,bg=black

# set window/pane colors and add "padding" around panes and windows
setw -g window-style 'bg=default'
setw -g window-active-style 'bg=default'
set-option -g pane-active-border-style 'bg=default'
set-option -ag pane-active-border-style 'bg=default'

# ask user to input window number they wish to swap with
bind-key S command-prompt -p "Swap current pane with?:" "swap-pane -t '%1'"

# swap windows/panes
bind-key -n M-Left swap-window -t -1
bind-key -n M-Right swap-window -t +1
not_tmux='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"` || `echo "#{pane_start_command}" | grep -iqE "fzf"` || `echo "#{pane_current_command}" | grep -iqE "fzf"`'
bind-key -n C-j if-shell "$not_tmux" "send-keys C-j" "swap-pane -t -1"
bind-key -n C-k if-shell "$not_tmux" "send-keys C-k" "swap-pane -t +1"

# auto renumber windows sequentially
set-option -g renumber-windows on

#}}}
#-------- Statusbar {{{
#------------------------------------------------------
# stuff for the statusbar broken down into right, left and center
set-option -g status-interval 1

# Time messages remain in the status bar. Lower this number
# if this is too distracting.
set-option -g display-time 4000

# command/message line colors
set-option -g message-style fg=white,bg=black,bright

# CENTER {{{
# Symbol    Meaning ================================
#      *    Denotes the current window.
#      -    Marks the last window (previously selected).
#      #    Window is monitored and activity has been detected.
#      !    A bell has occurred in the window.
#      ~    The window has been silent for the monitor-silence interval.
#      M    The window contains the marked pane.
#      Z    The window's active pane is zoomed.

# monitor changes on non-focus window (activity symbol = #)
# (e.g 1:zsh  2:zsh  3:torr# 4:im- 5:chat# 6:fm# 7:conf*)
set-window-option -g monitor-activity on

# bell colors (bell symbol = !)
# to simulate a bell alert use: sleep 3 && echo -e "\a"
set-window-option -g window-status-bell-style 'fg=black,bg=colour5,bright'

# statusbar colors
set-option -g status-style fg=white,bg=black,default

# window title colors; non active
set-window-option -g window-status-style fg=cyan,bg=default,dim

# window title colors; active
set-window-option -g window-status-current-style fg=white,bg=red,bright

#}}}
# LEFT SIDE {{{
set-option -g status-justify centre
set-option -g status-left-length 40
set-option -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
#}}}
# RIGHT SIDE {{{
# use "man date" to set the clock to your liking
# set-option -g status-right "#[fg=blue]#(~/battery Discharging) | #[fg=cyan]%a %D %l:%M:%p"
set-option -g status-right "#{?client_prefix,#[fg=yellow]@, } #[fg=cyan]| #[fg=green]%a %D %l:%M:%p"
#}}}

#}}}
#-------- External Scripts {{{
#------------------------------------------------------
# Run command on idle; screensaver
set-option -g lock-after-time 1200
set-option -g lock-command "cmatrix -C blue"
