# interpreter for shell commands (needs to be POSIX compatible)
set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set preview program
set previewer ~/.local/bin/tools/preview

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# use enter for shell commands
map <enter> shell

# execute current file (must be executable)
map x $$f
map X !$f

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) st -e $EDITOR $fx 2>/dev/null &;;
        inode/*) st -e $EDITOR $fx 2>/dev/null &;;
        image/*) sxiv $fx &;;
        */pdf) ~/.local/bin/tools/dothura $fx 2>/dev/null &;;
        audio/*) ffplay -autoexit $fx 2>/dev/null &;;
        video/*) ffplay -autoexit $fx 2>/dev/null &;;
        */x-mach-binary) st -e $fx &;;
        *) for f in $fx; do open $f > /dev/null 2> /dev/null & done;;
    esac
}}

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.trash
map DD trash

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# bulk rename
cmd bulk-rename ${{
    massren $fx
}}

# wal color
map bg $wal -st -i $f
map bG $wal -sq -i $f && recolor 2> /dev/null && /Users/frank/Library/Application\ Support/UÌˆbersicht/widgets/pecan/wal-set && xrdb ~/.Xresources

# fzf find
map f $nvim $(fzf --preview 'highlight --force --out-format=ansi {}')

# quickmarks
map gs cd "~/OneDrive - Yew Chung International School HK/School"
map ge cd "~/OneDrive - Yew Chung International School HK/Educational Materials"
map gr cd "~/Repositories"
map gt cd "~/Testbench"
map gp cd "~/Pictures"
map gw cd "~/Pictures/Wallpapers"
map gd cd "~/Documents"
map gD cd "~/Downloads"
map gc cd "~/.config"
map gb cd "~/.local/bin"
map gn cd "~/Documents/Notebooks"

# alter defaults
set hidden on
set icons true
